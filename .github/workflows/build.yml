name: CMake

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install meson
      run: pip3 install --user meson

    - name: Install packages
      run: sudo apt -y install nasm ninja-build

    - name: Get libdav1d
      run: sh ext/dav1d.cmd

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/build/libdav1dfile.so

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        install: >-
          mingw-w64-x86_64-cc
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-meson
          mingw-w64-x86_64-nasm
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-pkgconf
          git

    - name: Get libdav1d
      run: sh ext/dav1d.cmd

    - name: CMake configure (Release)
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build (Release)
      run: cmake --build release

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ./release/dav1dfile.dll

  osx:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install meson
        run: pip3 install meson ninja

      - name: Install packages
        run: brew install nasm

      - name: Get libdav1d
        run: sh ext/dav1d.cmd

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
  
      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
  
      - name: Dylib Fixup
        run: install_name_tool -id @rpath/libdav1dfile.1.dylib ${{github.workspace}}/build/libdav1dfile.1.dylib

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{github.workspace}}/build/libdav1dfile.1.dylib
